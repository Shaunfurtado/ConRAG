/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/7QpQkdPw1sp
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/

"use client";
import { Button } from "@/components/ui/button"
import { Collapsible, CollapsibleTrigger, CollapsibleContent } from "@/components/ui/collapsible"
import { Avatar, AvatarImage, AvatarFallback } from "@/components/ui/avatar"
import { Tabs, TabsList, TabsTrigger, TabsContent } from "@/components/ui/tabs"
import { Textarea } from "@/components/ui/textarea"
import { Card, CardHeader, CardTitle, CardDescription, CardContent } from "@/components/ui/card"
import Image from "next/image"
import { useState } from "react"
import { ScrollArea } from "@radix-ui/react-scroll-area";

export function RagUI() {
  const [conversations, setConversations] = useState([
    { id: 1, title: "Conversation 1" },
    { id: 2, title: "Conversation 2" },
    { id: 3, title: "Conversation 3" },
  ])

  const [activeConversation, setActiveConversation] = useState(1)
  const [messages, setMessages] = useState([
    { id: 1, sender: "user", content: "Hello, ConRAG!" },
    { id: 2, sender: "bot", content: "Hi there! How can I assist you today?" },
  ])

  return (
    // Intial div tag
    <div className="flex h-screen w-full">
      <div className="flex flex-col border-r bg-background p-4 md:w-72">
      <div className="w-64 border-r border-gray-300 shadow shadow-gray-300/50">
        <div className="p-4">
          <h2 className="text-2xl font-bold mb-4 ">Conversations</h2>
          <ScrollArea className="h-[calc(100vh-8rem)]">
            {conversations.map((conv) => (
              <Button
                key={conv.id}
                variant={activeConversation === conv.id ? "secondary" : "ghost"}
                className="w-full justify-start mb-2 border-gray-300 shadow-sm bg-gray-50 shadow-lg shadow-gray-300/50"
                onClick={() => setActiveConversation(conv.id)}
              >
                {conv.title}
              </Button>
            ))}
          </ScrollArea>
        </div>
      </div>
      </div>
      
      <div className="flex-1 flex flex-col">
        <div className="bg-background shadow p-4">
        <h1 className="text-center text-3xl font-bold ">ðŸš€ Let's Start the Great Conversation!</h1>
        <Tabs defaultValue="chat" >
          <div  className="w-full sm:w-3/4 md:w-1/2 lg:w-1/3 mx-auto flex flex-col p-3  transition-shadow duration-300 focus:outline-none focus:ring">
            <TabsList>
              <TabsTrigger value="chat">Chat</TabsTrigger>
              <TabsTrigger value="character">Character</TabsTrigger>
            </TabsList>
          </div>
            <TabsContent value="chat">
              <div className="flex flex-col h-[calc(100vh-64px)] shadow">
                <div className="flex-1 overflow-auto p-4">
                  <div className="flex items-start gap-4">
                    <Avatar className="h-8 w-8">
                      <AvatarImage src="/placeholder-user.jpg" alt="Avatar" />
                      <AvatarFallback>JD</AvatarFallback>
                    </Avatar>
                    <div className="space-y-1">
                      <div className="flex items-center gap-2">
                        <div className="font-medium">John Doe</div>
                        <div className="text-xs text-muted-foreground">10:30 AM</div>
                      </div>
                      <div className="text-sm">
                        Hey team, just wanted to give you an update on the ConRAG project. We&apos;re making great progress
                        and should have the first phase completed by the end of the month.
                      </div>
                    </div>
                  </div>
                  <div className="flex items-start gap-4 mt-4">
                    <Avatar className="h-8 w-8">
                      <AvatarImage src="/placeholder-user.jpg" alt="Avatar" />
                      <AvatarFallback>JS</AvatarFallback>
                    </Avatar>
                    <div className="space-y-1">
                      <div className="flex items-center gap-2">
                        <div className="font-medium">Jane Smith</div>
                        <div className="text-xs text-muted-foreground">10:35 AM</div>
                      </div>
                      <div className="text-sm">
                        Sounds good, John. Let me know if you need any help with the final push.
                      </div>
                    </div>
                  </div>
                </div>
                <div className="border-t bg-background p-4">
                  <div className="relative">
                    <Textarea
                      placeholder="Type your message..."
                      className="min-h-[48px] w-full rounded-2xl resize-none border border-neutral-400 shadow-sm pr-16 p-4"
                    />
                    <Button type="submit" size="icon" className="absolute w-8 h-8 top-3 right-3">
                      <SendIcon className="w-4 h-4" />
                    </Button>
                  </div>
                </div>
              </div>
            </TabsContent>
            <TabsContent value="character">
              <div className="flex items-center justify-center h-full">
                <div className="relative w-[400px] h-[400px]">
                  <Image src="/placeholder.svg" alt="Character" fill className="object-contain" />
                  <div className="absolute bottom-4 left-4 bg-background/80 rounded-md px-4 py-2 text-sm">
                    <div className="font-medium">ConRAG Character</div>
                    <div className="text-muted-foreground">Click to interact with the character</div>
                  </div>
                </div>
              </div>
            </TabsContent>
          </Tabs>
        </div>
      </div>
      <div className="border-l bg-background p-4 md:w-72">
        <div className="mb-4 flex items-center justify-between">
          <h2 className="text-lg font-semibold">Documents</h2>
          <Button variant="ghost" size="icon">
            <PlusIcon className="h-5 w-5" />
          </Button>
        </div>
        <div className="flex-1 overflow-auto">
          <Card className="mb-4">
            <CardHeader>
              <CardTitle>Project Proposal</CardTitle>
              <CardDescription>Submitted on 2023-04-15</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-2">
                  <FileIcon className="h-5 w-5 text-muted-foreground" />
                  <div>notes1.pdf</div>
                </div>
                <Button variant="ghost" size="icon">
                  <DownloadIcon className="h-5 w-5" />
                </Button>
              </div>
            </CardContent>
          </Card>
          <Card className="mb-4">
            <CardHeader>
              <CardTitle>Design Mockups</CardTitle>
              <CardDescription>Submitted on 2023-04-20</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-2">
                  <FileIcon className="h-5 w-5 text-muted-foreground" />
                  <div>notes2.zip</div>
                </div>
                <Button variant="ghost" size="icon">
                  <DownloadIcon className="h-5 w-5" />
                </Button>
              </div>
            </CardContent>
          </Card>
          <Card className="mb-4">
            <CardHeader>
              <CardTitle>Technical Specifications</CardTitle>
              <CardDescription>Submitted on 2023-04-25</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-2">
                  <FileIcon className="h-5 w-5 text-muted-foreground" />
                  <div>specs.pdf</div>
                </div>
                <Button variant="ghost" size="icon">
                  <DownloadIcon className="h-5 w-5" />
                </Button>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  )
}

function ChevronDownIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m6 9 6 6 6-6" />
    </svg>
  )
}


function DownloadIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" />
      <polyline points="7 10 12 15 17 10" />
      <line x1="12" x2="12" y1="15" y2="3" />
    </svg>
  )
}


function FileIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z" />
      <path d="M14 2v4a2 2 0 0 0 2 2h4" />
    </svg>
  )
}


function PlusIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M5 12h14" />
      <path d="M12 5v14" />
    </svg>
  )
}


function SendIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m22 2-7 20-4-9-9-4Z" />
      <path d="M22 2 11 13" />
    </svg>
  )
}
